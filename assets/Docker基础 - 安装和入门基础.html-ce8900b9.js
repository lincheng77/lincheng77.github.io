const e=JSON.parse('{"key":"v-31334ae7","path":"/manage-with-deploy/docker/Docker%E5%9F%BA%E7%A1%80%20-%20%E5%AE%89%E8%A3%85%E5%92%8C%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80.html","title":"Docker基础 - 安装和入门基础","lang":"zh-CN","frontmatter":{"description":"Docker基础 - 安装和入门基础 在了解了虚拟化技术和Docker之后，让我们上手Docker，看看Docker是怎么工作的。这里会介绍CentOS环境下Docker的安装和配置，以及会给你展示两个实例，给你一个直观的理解。再啰嗦下，有条件的情况下直接看官网在新窗口打开, 网上资料鱼龙混杂，版本也更新不及时。 Docker 架构 理解如下的一些概念，你才知道安装什么 Docker 使用客户端-服务器（C/S）架构模式，使用远程API来管理和创建Docker容器。 Docker客户端（Client）：Docker客户端通过命令行或者其他工具（如Docker SDK[https://docs.docker.com/develop/sdk/]）与Docker的守护进程通信。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/manage-with-deploy/docker/Docker%E5%9F%BA%E7%A1%80%20-%20%E5%AE%89%E8%A3%85%E5%92%8C%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"Docker基础 - 安装和入门基础"}],["meta",{"property":"og:description","content":"Docker基础 - 安装和入门基础 在了解了虚拟化技术和Docker之后，让我们上手Docker，看看Docker是怎么工作的。这里会介绍CentOS环境下Docker的安装和配置，以及会给你展示两个实例，给你一个直观的理解。再啰嗦下，有条件的情况下直接看官网在新窗口打开, 网上资料鱼龙混杂，版本也更新不及时。 Docker 架构 理解如下的一些概念，你才知道安装什么 Docker 使用客户端-服务器（C/S）架构模式，使用远程API来管理和创建Docker容器。 Docker客户端（Client）：Docker客户端通过命令行或者其他工具（如Docker SDK[https://docs.docker.com/develop/sdk/]）与Docker的守护进程通信。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-07T06:27:57.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:modified_time","content":"2023-04-07T06:27:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker基础 - 安装和入门基础\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-07T06:27:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mrhope.site\\"}]}"]]},"headers":[{"level":2,"title":"Docker 架构","slug":"docker-架构","link":"#docker-架构","children":[]},{"level":2,"title":"Docker安装","slug":"docker安装","link":"#docker安装","children":[{"level":3,"title":"安装要求","slug":"安装要求","link":"#安装要求","children":[]},{"level":3,"title":"卸载老的Docker及依赖","slug":"卸载老的docker及依赖","link":"#卸载老的docker及依赖","children":[]},{"level":3,"title":"安装一些依赖库","slug":"安装一些依赖库","link":"#安装一些依赖库","children":[]},{"level":3,"title":"安装Docker CE","slug":"安装docker-ce","link":"#安装docker-ce","children":[]},{"level":3,"title":"启动Docker CE","slug":"启动docker-ce","link":"#启动docker-ce","children":[]}]},{"level":2,"title":"仓库配置","slug":"仓库配置","link":"#仓库配置","children":[]},{"level":2,"title":"镜像查看和拉取","slug":"镜像查看和拉取","link":"#镜像查看和拉取","children":[]},{"level":2,"title":"容器实例-ubuntu实例","slug":"容器实例-ubuntu实例","link":"#容器实例-ubuntu实例","children":[{"level":3,"title":"在Ubuntu容器中跑Hello world","slug":"在ubuntu容器中跑hello-world","link":"#在ubuntu容器中跑hello-world","children":[]},{"level":3,"title":"在Ubuntu容器中交互","slug":"在ubuntu容器中交互","link":"#在ubuntu容器中交互","children":[]},{"level":3,"title":"让Ubuntu容器在后台运行","slug":"让ubuntu容器在后台运行","link":"#让ubuntu容器在后台运行","children":[]}]}],"git":{"createdTime":1680782157000,"updatedTime":1680848877000,"contributors":[{"name":"“dingmd”","email":"“dingmd@cffex.com.cn”","commits":2},{"name":"lincheng","email":"1498047434@qq.com","commits":1}]},"readingTime":{"minutes":5.64,"words":1691},"filePathRelative":"manage-with-deploy/docker/Docker基础 - 安装和入门基础.md","localizedDate":"2023年4月6日","excerpt":"<h1> Docker基础 - 安装和入门基础</h1>\\n<blockquote>\\n<p>在了解了虚拟化技术和Docker之后，让我们上手Docker，看看Docker是怎么工作的。这里会介绍CentOS环境下Docker的安装和配置，以及会给你展示两个实例，给你一个直观的理解。再啰嗦下，有条件的情况下直接看官网在新窗口打开, 网上资料鱼龙混杂，版本也更新不及时。</p>\\n</blockquote>\\n<h2> Docker 架构</h2>\\n<blockquote>\\n<p>理解如下的一些概念，你才知道安装什么</p>\\n</blockquote>\\n<ul>\\n<li>\\n<p>Docker 使用客户端-服务器（C/S）架构模式，使用远程API来管理和创建Docker容器。</p>\\n</li>\\n<li>\\n<p>Docker客户端（Client）：Docker客户端通过命令行或者其他工具（如Docker SDK[<a href=\\"https://docs.docker.com/develop/sdk/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://docs.docker.com/develop/sdk/</a>]）与Docker的守护进程通信。</p>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
